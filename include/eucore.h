/******************************************************
Copyright(c) 版权所有，1998-2003微逻辑。保留所有权利。
******************************************************/

#ifndef __EUCORE_H
#define __EUCORE_H

#ifdef __cplusplus
extern "C" {
#endif      // __cplusplus

// 注意!!!!!!!!!!!!!!!!!!!!!!!!!!!!
// 因为 SYS_IMPLEMENTCALLBACK, 	SYS_IMPLEMENTCALLBACK4的值在callsrv.s文件里会用到,
// 假如改变了调用顺序，你必须同时改变callsrv.s的代码
//
enum{
//  process
// intr api
    INTR_INIT = 1,
	INTR_DONE,
	INTR_DISABLE,
	INTR_ENABLE,
//interlock api
    INTERLOCK_INCREMENT,	// 5
    INTERLOCK_DECREMENT,
    INTERLOCK_EXCHANGE, 
    INTERLOCK_EXCHANGEADD,
    INTERLOCK_COMPAREEXCHANGE,
// dbg
    DBG_OUTSTRING,           //10
// page
    PAGE_ALLOCMEM,
	PAGE_FREEMEM,
//

// semphore and sync...
    SEMAPHORE_CREATE,		//13
    SEMAPHORE_RELEASE,
    MUTEX_CREATE,			//15
    MUTEX_RELEASE,
    EVENT_CREATE,
    EVENT_RESET,  //
    EVENT_SET,
	EVENT_PULSE,			//20
    CRITICALSECTION_INITIALIZE,
    CRITICALSECTION_DELETE,
    CRITICALSECTION_LEAVE,  //
    CRITICALSECTION_ENTER,
	CRITICALSECTION_INITIALIZE_AND_SPIN_COUNT,	//25
	CRITICALSECTION_SET_SPIN_COUNT,
	CRITICALSECTION_TRY_ENTER,
	TIMERQUEUE_CREATE,
    TIMERQUEUE_DELETE,
	TIMERQUEUE_CREATETIMER,  //30
	TIMERQUEUE_DELETETIMER,
	TIMERQUEUE_CHANGETIMER,
	TIMERQUEUE_DELETEEX,
// misc
    SYS_WAITFORSINGLEOBJECT,
	SYS_WAITFORMULTIPLEOBJECTS,		//35
	SYS_ALLOCAPIHANDLE, //
	SYS_CLOSEHANDLE,  
	SYS_SLEEP,
	SYS_GETTICKCOUNT,
	SYS_GETSYSTEMTIME,   //40
	SYS_SETSYSTEMTIME, //
	SYS_EXIT,
	SYS_GETINFO,
	SYS_GETVERSION,
	SYS_IMPLEMENTCALLBACK,		//45
	SYS_IMPLEMENTCALLBACK4,
	SYS_GETTOC,
//  heap
    HEAP_CREATE,
	HEAP_DESTROY,
	HEAP_ALLOC,				// 50
	HEAP_FREE,
	HEAP_REALLOC,
	HEAP_VALIDATE,
	HEAP_LOCK,     //为以后保留
	HEAP_UNLOCK,     //为以后保留
	HEAP_COMPACT,     //为以后保留
    HEAP_SIZE,     //为以后保留
    HEAP_WALK,     //为以后保留
// thread
    THREAD_CREATE,
    THREAD_SETPRIORITY,		//60
	THREAD_GETPRIORITY,
	THREAD_SETPOLICY, //
	THREAD_GETPOLICY,//
    THREAD_GETCURRENT,
    THREAD_GETCURRENTID,
    THREAD_GETEXITCODE,
    THREAD_EXIT,
    THREAD_SWITCHTO, //
	THREAD_TERMINATE,
	THREAD_LOCKSCHEDULE,		//70
	THREAD_UNLOCKSCHEDULE,
	THREAD_SUSPEND,
	THREAD_RESUME,

	SYS_CAPTUREEXCEPTION,
	SYS_RELEASEEXCEPTION,
	SYS_GET_COMPUTER_NAME_EX,
	SYS_SET_COMPUTER_NAME_EX,
	SYS_REGISTRYIO,
	THREAD_CHANGE_ROTATE,//为以后保留
	CORE_RESERVE6,//为以后保留
	CORE_RESERVE7,//为以后保留

//    
	AP_REGISTER,
    AP_LOAD,
    AP_GETICON,
//
	PROCESS_CREATE,
	PROCESS_TERMINATE,
	PROCESS_GETCURRENTID, //10
	PROCESS_GETHEAP,
	PROCESS_MAPPTR,
	PROCESS_UNMAPPTR,
    PROCESS_GETCURRENT,
    PROCESS_GETCALLER,  //15
    PROCESS_GETOWNER,
	PROCESS_GETEXITCODE,
// tls
    TLS_ALLOC,
    TLS_FREE,
    TLS_GETVALUE,
    TLS_SETVALUE,  //30
	TLS_GETTHREADVALUE,
	TLS_SETTHREADVALUE,
// error
    ERROR_SETLAST,
	ERROR_GETLAST,
// module
    MODULE_LOADLIBRARYEX,
	MODULE_FREELIBRARY,
	MODULE_GETPROCADDRESS,
	MODULE_GETFILENAME, //50
	MODULE_GETHANDLE,
	MODULE_FREELIBRARYANDEXITTHREAD,
	MODULE_DISABLETHREADLIBRARYCALLS,
	MODULE_GETFILEHANDLE,
	MODULE_GETSECTIONOFFSET, //55
// elf dll open
	DLL_OPENMODULE,
	DLL_OPENDEPENDENCE,
// mem
    MEM_ALLOCPHYSICAL,
	MEM_FREEPHYSICAL,
	MEM_VIRTUALALLOC,
	MEM_VIRTUALFREE,
	MEM_VIRTUALCOPY,
	MEM_VIRTUALPROTECT,
	MEM_GLOBALSTATUS,
// power
    POWER_SYSTEMOFF,
	SYS_PROFILEKERNEL,
	SYS_GETCOMMANDLINE,
	PROCESS_GETUSERDATA,
	PROCESS_SETUSERDATA,
	PROCESS_OPEN,
	MODULE_RELEASEFILEHANDLE,
	THREAD_SETPERMISSIONS,
	THREAD_GETPERMISSIONS,
	SYS_SETALARMINFO,
	SYS_REFRESHALARM,
	PROCESS_GETID
};

#ifdef __cplusplus
}
#endif  // __cplusplus

#endif  //__EUCORE_H

