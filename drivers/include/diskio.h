/******************************************************
Copyright(c) 版权所有，1998-2003微逻辑。保留所有权利。
******************************************************/

#ifndef __DISKIO_H
#define __DISKIO_H

#ifdef __cplusplus
extern "C" {
#endif      // __cplusplus

//
// Removeable media error conditions.
//
#define ERROR_NOT_READY                  21L
#define DISK_DEAD_ERROR     ERROR_NOT_READY
#define DISK_REMOVED_ERROR  ERROR_BAD_UNIT


// disk io
#define IOCTL_DISK_READ CTL_CODE(FILE_DEVICE_DISK, 1, METHOD_BUFFERED, FILE_READ_ACCESS)
#define IOCTL_DISK_WRITE CTL_CODE(FILE_DEVICE_DISK, 2, METHOD_BUFFERED, FILE_WRITE_ACCESS)
#define IOCTL_DISK_GETINFO CTL_CODE(FILE_DEVICE_DISK, 3, METHOD_BUFFERED, FILE_READ_ACCESS)
#define IOCTL_DISK_SETINFO CTL_CODE(FILE_DEVICE_DISK, 4, METHOD_BUFFERED, FILE_WRITE_ACCESS)
#define IOCTL_DISK_INITIALIZED CTL_CODE(FILE_DEVICE_DISK, 5, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_DISK_GETNAME CTL_CODE(FILE_DEVICE_DISK, 6, METHOD_BUFFERED, FILE_READ_ACCESS)

#define IOCTL_DISK_FORMAT_MEDIA CTL_CODE(FILE_DEVICE_DISK, 7, METHOD_BUFFERED, FILE_ANY_ACCESS)

// format or scan a volume. 
#define IOCTL_DISK_FORMAT_VOLUME  CTL_CODE(FILE_DEVICE_DISK, 8, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_DISK_SCAN_VOLUME    CTL_CODE(FILE_DEVICE_DISK, 9, METHOD_BUFFERED, FILE_ANY_ACCESS)

// lpInBuffer = LPDWORD = ...
#define READONLY_SET          0
#define READONLY_CLEAR        1
#define IOCTL_DISK_READONLY       CTL_CODE(FILE_DEVICE_DISK, 10, METHOD_BUFFERED, FILE_ANY_ACCESS)

#define IOCTL_DISK_DELETE_SECTORS  CTL_CODE(FILE_DEVICE_DISK, 11, METHOD_BUFFERED, FILE_ANY_ACCESS)

typedef struct _DELETE_SECTOR_INFO 
{
    DWORD dwSize; // size of structure
    DWORD dwStartSector;
    DWORD dwNumSectors;
} DELETE_SECTOR_INFO, *PDELETE_SECTOR_INFO, FAR * LPDELETE_SECTOR_INFO;    

//The ioctl code is define for romfs by zb.
//FILE_DEVICE_ROM_FILE_SYSTEM
#define	IOCTL_ROM_ALLOC_FILE	CTL_CODE(FILE_DEVICE_ROM_FILE_SYSTEM, 100, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define	IOCTL_ROM_GET_EXE_INFO	CTL_CODE(FILE_DEVICE_ROM_FILE_SYSTEM, 101, METHOD_BUFFERED, FILE_READ_ACCESS)
#define	IOCTL_ROM_GET_OBJ_INFO	CTL_CODE(FILE_DEVICE_ROM_FILE_SYSTEM, 102, METHOD_BUFFERED, FILE_READ_ACCESS)
#define	IOCTL_ROM_GET_ELF_INFO	CTL_CODE(FILE_DEVICE_ROM_FILE_SYSTEM, 103, METHOD_BUFFERED, FILE_READ_ACCESS)
#define	IOCTL_ROM_GET_SEG_RES	CTL_CODE(FILE_DEVICE_ROM_FILE_SYSTEM, 104, METHOD_BUFFERED, FILE_READ_ACCESS)

//
// DISK_INFO.di_flags bit definitions
//
//#define DISK_INFO_FLAG_MBR           0x00000001 // device type has/needs an MBR
//#define DISK_INFO_FLAG_CHS_UNCERTAIN 0x00000002 // driver generated CHS values are suspect
//#define DISK_INFO_FLAG_UNFORMATTED   0x00000004 // low level format (DISK_IOCTL_FORMAT_MEDIA) needed
//#define DISK_INFO_FLAG_PAGEABLE      0x00000008 // device can be used for demand paging

#define MAX_SG_BUF 8

#ifdef __cplusplus
}
#endif  // __cplusplus

#endif  //__DISKIO_H
